# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.11

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /Users/davidstanke/homebrew/Cellar/cmake/3.11.1/bin/cmake

# The command to remove a file.
RM = /Users/davidstanke/homebrew/Cellar/cmake/3.11.1/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/davidstanke/gitroot/davidstanke/abseil-demo

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/davidstanke/gitroot/davidstanke/abseil-demo

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/Users/davidstanke/homebrew/Cellar/cmake/3.11.1/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/Users/davidstanke/homebrew/Cellar/cmake/3.11.1/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(CMAKE_COMMAND) -E cmake_progress_start /Users/davidstanke/gitroot/davidstanke/abseil-demo/CMakeFiles /Users/davidstanke/gitroot/davidstanke/abseil-demo/abseil-cpp/absl/types/CMakeFiles/progress.marks
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/davidstanke/gitroot/davidstanke/abseil-demo/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/rule:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/rule
.PHONY : abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/rule

# Convenience name for target.
absl_bad_optional_access: abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/rule

.PHONY : absl_bad_optional_access

# fast build rule for target.
absl_bad_optional_access/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/build
.PHONY : absl_bad_optional_access/fast

# Convenience name for target.
abseil-cpp/absl/types/CMakeFiles/absl_span.dir/rule:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/CMakeFiles/absl_span.dir/rule
.PHONY : abseil-cpp/absl/types/CMakeFiles/absl_span.dir/rule

# Convenience name for target.
absl_span: abseil-cpp/absl/types/CMakeFiles/absl_span.dir/rule

.PHONY : absl_span

# fast build rule for target.
absl_span/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_span.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_span.dir/build
.PHONY : absl_span/fast

# Convenience name for target.
abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/rule:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/rule
.PHONY : abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/rule

# Convenience name for target.
absl_optional: abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/rule

.PHONY : absl_optional

# fast build rule for target.
absl_optional/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/build
.PHONY : absl_optional/fast

# Convenience name for target.
abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/rule:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/rule
.PHONY : abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/rule

# Convenience name for target.
absl_bad_any_cast: abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/rule

.PHONY : absl_bad_any_cast

# fast build rule for target.
absl_bad_any_cast/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/build
.PHONY : absl_bad_any_cast/fast

# Convenience name for target.
abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/rule:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/rule
.PHONY : abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/rule

# Convenience name for target.
absl_variant: abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/rule

.PHONY : absl_variant

# fast build rule for target.
absl_variant/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/build
.PHONY : absl_variant/fast

# Convenience name for target.
abseil-cpp/absl/types/CMakeFiles/absl_any.dir/rule:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f CMakeFiles/Makefile2 abseil-cpp/absl/types/CMakeFiles/absl_any.dir/rule
.PHONY : abseil-cpp/absl/types/CMakeFiles/absl_any.dir/rule

# Convenience name for target.
absl_any: abseil-cpp/absl/types/CMakeFiles/absl_any.dir/rule

.PHONY : absl_any

# fast build rule for target.
absl_any/fast:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_any.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_any.dir/build
.PHONY : absl_any/fast

absl_any_header_only_dummy.o: absl_any_header_only_dummy.cc.o

.PHONY : absl_any_header_only_dummy.o

# target to build an object file
absl_any_header_only_dummy.cc.o:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_any.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_any.dir/absl_any_header_only_dummy.cc.o
.PHONY : absl_any_header_only_dummy.cc.o

absl_any_header_only_dummy.i: absl_any_header_only_dummy.cc.i

.PHONY : absl_any_header_only_dummy.i

# target to preprocess a source file
absl_any_header_only_dummy.cc.i:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_any.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_any.dir/absl_any_header_only_dummy.cc.i
.PHONY : absl_any_header_only_dummy.cc.i

absl_any_header_only_dummy.s: absl_any_header_only_dummy.cc.s

.PHONY : absl_any_header_only_dummy.s

# target to generate assembly for a file
absl_any_header_only_dummy.cc.s:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_any.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_any.dir/absl_any_header_only_dummy.cc.s
.PHONY : absl_any_header_only_dummy.cc.s

absl_span_header_only_dummy.o: absl_span_header_only_dummy.cc.o

.PHONY : absl_span_header_only_dummy.o

# target to build an object file
absl_span_header_only_dummy.cc.o:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_span.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_span.dir/absl_span_header_only_dummy.cc.o
.PHONY : absl_span_header_only_dummy.cc.o

absl_span_header_only_dummy.i: absl_span_header_only_dummy.cc.i

.PHONY : absl_span_header_only_dummy.i

# target to preprocess a source file
absl_span_header_only_dummy.cc.i:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_span.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_span.dir/absl_span_header_only_dummy.cc.i
.PHONY : absl_span_header_only_dummy.cc.i

absl_span_header_only_dummy.s: absl_span_header_only_dummy.cc.s

.PHONY : absl_span_header_only_dummy.s

# target to generate assembly for a file
absl_span_header_only_dummy.cc.s:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_span.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_span.dir/absl_span_header_only_dummy.cc.s
.PHONY : absl_span_header_only_dummy.cc.s

bad_any_cast.o: bad_any_cast.cc.o

.PHONY : bad_any_cast.o

# target to build an object file
bad_any_cast.cc.o:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/bad_any_cast.cc.o
.PHONY : bad_any_cast.cc.o

bad_any_cast.i: bad_any_cast.cc.i

.PHONY : bad_any_cast.i

# target to preprocess a source file
bad_any_cast.cc.i:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/bad_any_cast.cc.i
.PHONY : bad_any_cast.cc.i

bad_any_cast.s: bad_any_cast.cc.s

.PHONY : bad_any_cast.s

# target to generate assembly for a file
bad_any_cast.cc.s:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_any_cast.dir/bad_any_cast.cc.s
.PHONY : bad_any_cast.cc.s

bad_optional_access.o: bad_optional_access.cc.o

.PHONY : bad_optional_access.o

# target to build an object file
bad_optional_access.cc.o:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/bad_optional_access.cc.o
.PHONY : bad_optional_access.cc.o

bad_optional_access.i: bad_optional_access.cc.i

.PHONY : bad_optional_access.i

# target to preprocess a source file
bad_optional_access.cc.i:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/bad_optional_access.cc.i
.PHONY : bad_optional_access.cc.i

bad_optional_access.s: bad_optional_access.cc.s

.PHONY : bad_optional_access.s

# target to generate assembly for a file
bad_optional_access.cc.s:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_bad_optional_access.dir/bad_optional_access.cc.s
.PHONY : bad_optional_access.cc.s

bad_variant_access.o: bad_variant_access.cc.o

.PHONY : bad_variant_access.o

# target to build an object file
bad_variant_access.cc.o:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/bad_variant_access.cc.o
.PHONY : bad_variant_access.cc.o

bad_variant_access.i: bad_variant_access.cc.i

.PHONY : bad_variant_access.i

# target to preprocess a source file
bad_variant_access.cc.i:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/bad_variant_access.cc.i
.PHONY : bad_variant_access.cc.i

bad_variant_access.s: bad_variant_access.cc.s

.PHONY : bad_variant_access.s

# target to generate assembly for a file
bad_variant_access.cc.s:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_variant.dir/bad_variant_access.cc.s
.PHONY : bad_variant_access.cc.s

optional.o: optional.cc.o

.PHONY : optional.o

# target to build an object file
optional.cc.o:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/optional.cc.o
.PHONY : optional.cc.o

optional.i: optional.cc.i

.PHONY : optional.i

# target to preprocess a source file
optional.cc.i:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/optional.cc.i
.PHONY : optional.cc.i

optional.s: optional.cc.s

.PHONY : optional.s

# target to generate assembly for a file
optional.cc.s:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(MAKE) -f abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/build.make abseil-cpp/absl/types/CMakeFiles/absl_optional.dir/optional.cc.s
.PHONY : optional.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... absl_bad_optional_access"
	@echo "... absl_span"
	@echo "... absl_optional"
	@echo "... absl_bad_any_cast"
	@echo "... edit_cache"
	@echo "... absl_variant"
	@echo "... absl_any"
	@echo "... absl_any_header_only_dummy.o"
	@echo "... absl_any_header_only_dummy.i"
	@echo "... absl_any_header_only_dummy.s"
	@echo "... absl_span_header_only_dummy.o"
	@echo "... absl_span_header_only_dummy.i"
	@echo "... absl_span_header_only_dummy.s"
	@echo "... bad_any_cast.o"
	@echo "... bad_any_cast.i"
	@echo "... bad_any_cast.s"
	@echo "... bad_optional_access.o"
	@echo "... bad_optional_access.i"
	@echo "... bad_optional_access.s"
	@echo "... bad_variant_access.o"
	@echo "... bad_variant_access.i"
	@echo "... bad_variant_access.s"
	@echo "... optional.o"
	@echo "... optional.i"
	@echo "... optional.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /Users/davidstanke/gitroot/davidstanke/abseil-demo && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

